openapi: 3.0.2
info:
  title: demo user app
  description: "demo user+account app description"
  termsOfService: https://editor-next.swagger.io/
  contact:
    email: example@gmail.com
    url: https://swagger.io/specification/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
externalDocs:
  description: Find out more about swagger
  url: https://swagger.io/specification/
servers:
  - url: http://localhost:8080
tags:
  - name: transaction
    description: Operations about Transaction
    externalDocs:
      description: Find out more about our store
      url: https://editor-next.swagger.io/
paths:
  /api/transaction:
    get:
      tags:
        - Transaction
      summary: Get all Transaction
      operationId: getAllTransaction
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRsList'
        404:
          description: Transaction not found
          content:
            application/json: { }
    post:
      tags:
        - Transaction
      summary: Create Transaction
      description: Create Transaction functionality
      operationId: createTransaction
      requestBody:
        description: Created Transaction object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransactionRegistrRq'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRegistrationRs'
        404:
          description: Transaction not found
          content:
            application/json: { }
  /api/transaction/{id}:
    get:
      tags:
        - Transaction
      summary: Get Transaction by id
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use 123 for example. '
          required: true
          schema:
            type: string
          example: 123
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRs'
        404:
          description: Transaction not found
          content:
            application/json: { }
    delete:
      summary: delete Transaction by id
      operationId: deleteTransactionById
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be delete Transaction. Use 123 for example. '
          required: true
          schema:
            type: string
          example: 123
      responses:
        200:
          description: successful operation
          content:
            application/json: { }
        404:
          description: Transaction not found
          content:
            application/json: { }
    put:
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be update Transaction. Use 123 for example. '
          required: true
          schema:
            type: string
          example: 123
      summary: Updated Transaction
      operationId: updateTransaction
      requestBody:
        description: Updated Transaction object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransactionUpdateRq'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionUpdateRq'
        400:
          description: Invalid Transaction supplied
          content: { }
        404:
          description: Transaction not found
          content: { }
components:
  schemas:
    TransactionRegistrRq:
      type: object
      required:
        - accountFrom
        - accountTo
        - sum
        - status
      properties:
        accountFrom:
          type: string
          example: 12345_fff_12345
        accountTo:
          type: string
          example: 12345_fff_12345
        sum:
          type: number
          example: 12345,99
        status:
          type: string
          example: TRANSFER; WITHDRAWAL; DEPOSIT.
        description:
          type: string
          example: any comment
    TransactionRegistrationRs:
      type: object
      required:
        - id
        - accountFrom
        - accountTo
        - sum
        - status
      properties:
        id:
          type: string
          example: 123
        accountFrom:
          type: string
          example: 12345_fff_12345
        accountTo:
          type: string
          example: 12345_fff_12345
        sum:
          type: number
          example: 12345,22
        status:
          type: string
          example: TRANSFER; WITHDRAWAL; DEPOSIT.
        description:
          type: string
          example: any comment
    TransactionUpdateRq:
      type: object
      required:
        - id
        - accountFrom
        - accountTo
        - sum
        - status
      properties:
        id:
          type: string
          example: 123
        accountFrom:
          type: string
          example: 12345_fff_12345
        accountTo:
          type: string
          example: 12345_fff_12345
        sum:
          type: number
          example: 1234,22
        status:
          type: string
          example: TRANSFER; WITHDRAWAL; DEPOSIT.
        description:
          type: string
          example: any comment
    TransactionRs:
      type: object
      required:
        - id
        - accountFrom
        - accountTo
        - sum
        - status
        - createDateTime
        - updateDateTime
      properties:
        id:
          type: string
          example: 123
        accountFrom:
          type: string
          example: 12345_fff_12345
        accountTo:
          type: string
          example: 12345_fff_12345
        sum:
          type: number
          example: masha
        status:
          type: string
          example: TRANSFER; WITHDRAWAL; DEPOSIT.
        createDateTime:
          type: string
          example: 2008-05-30 08:20:12
        updateDateTime:
          type: string
          example: 2008-05-30 08:20:12
        description:
          type: string
          example: ivanov account
    TransactionRsList:
      type: array
      items:
        $ref: "#/components/schemas/TransactionRs"
